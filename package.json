{
  "name": "@nrfcloud/api-client-javascript",
  "version": "0.0.0-development",
  "description": "JavaScript API client for the nRFCloud.com REST API",
  "main": "dist/index.js",
  "typings": "dist/index.d.ts",
  "scripts": {
    "test": "jest",
    "test:coverage": "npm run test -- --coverage && codeclimate-test-reporter < ./coverage/lcov.info",
    "commitmsg": "commitlint -e",
    "semantic-release": "semantic-release",
    "lint": "tslint --project ./tsconfig.json -e generated/**/*",
    "travis-deploy-once": "travis-deploy-once"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nRFCloud/api-client-javascript.git"
  },
  "keywords": [
    "nRFCloud",
    "IoT",
    "NordicSemiconductor"
  ],
  "author": "Nordic Semiconductor ASA | nordicsemi.no",
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/nRFCloud/api-client-javascript/issues"
  },
  "homepage": "https://github.com/nRFCloud/api-client-javascript#readme",
  "devDependencies": {
    "@commitlint/cli": "^6.0.2",
    "@commitlint/config-angular": "^6.0.2",
    "@nrfcloud/api": "git+https://github.com/nRFCloud/api.git#v1.0.0-preview.1",
    "@nrfcloud/models": "^2.1.2",
    "@nrfcloud/tslint-config": "^1.2.1",
    "@types/jest": "^22.1.0",
    "codeclimate-test-reporter": "^0.5.0",
    "husky": "^0.14.3",
    "jest": "^22.1.4",
    "json-schema-to-typescript": "^5.3.2",
    "semantic-release": "^15.0.0",
    "travis-deploy-once": "^4.3.2",
    "ts-jest": "^22.0.1",
    "tslint": "^5.9.1",
    "typescript": "^2.6.2"
  },
  "peerDependencies": {
    "@nrfcloud/models": "^2.1.2",
    "es6-promise": "^4.2.2",
    "isomorphic-fetch": "^2.2.1"
  },
  "files": [
    "dist",
    "README.md"
  ],
  "publishConfig": {
    "access": "public",
    "tag": "preview"
  },
  "dependencies": {},
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json"
    ],
    "transform": {
      "^.+\\.tsx?$": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "coverageReporters": [
      "html",
      "lcov"
    ],
    "mapCoverage": true
  }
}
